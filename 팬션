<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>안산교회 펜션 예약 시스템</title>
    <style>
        body { font-family: Arial, sans-serif; background-color: #f4f4f4; text-align: center; }
        h1 { color: #333; }
        .calendar { display: grid; grid-template-columns: repeat(7, 1fr); gap: 5px; max-width: 500px; margin: auto; }
        .day { padding: 15px; text-align: center; border-radius: 8px; font-size: 16px; background: white; cursor: pointer; border: 1px solid #ccc; }
        .reserved { background-color: gray; color: white; }
        .available { background-color: white; }
        .selected { background-color: yellow !important; }
        .reservation-form { margin-top: 20px; background: white; padding: 20px; border-radius: 8px; display: inline-block; }
        label { display: block; margin: 10px 0 5px; font-weight: bold; }
        input { width: 100%; padding: 8px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 5px; }
        button { background-color: #007bff; color: white; border: none; padding: 10px 15px; border-radius: 5px; cursor: pointer; }
        button:hover { background-color: #0056b3; }
        .reservation-list { margin-top: 10px; font-size: 14px; color: #555; }
    </style>
</head>
<body>
    <h1>안산교회 펜션 예약 시스템</h1>
    <div id="calendar" class="calendar"></div>
    
    <div class="reservation-form">
        <h2>예약 상세 정보</h2>
        <form id="reservationForm">
            <label>신청자: <input type="text" name="name" required></label>
            <label>기간: <input type="date" name="startDate" required> ~ <input type="date" name="endDate" required></label>
            <label>인원: <input type="number" name="people" required></label>
            <label>필요한 객실 수: <input type="number" name="rooms" required></label>
            <button type="submit">예약 신청</button>
        </form>
    </div>
    
    <script>
        const apiUrl = "AKfycbx_7mur_yEi2bVZD5wjRvnM84etHe1nTiWVU6mRoCUyUUwV94A0Vd6oZqLdJ-mIyRS1"; //
        let reservedDates = {};

        async function fetchReservations() {
            try {
                const response = await fetch(apiUrl);
                reservedDates = await response.json();
                generateCalendar(new Date().getFullYear(), new Date().getMonth());
            } catch (error) {
                console.error("예약 데이터를 불러오는 데 실패했습니다.", error);
            }
        }

        function generateCalendar(year, month) {
            const calendar = document.getElementById("calendar");
            calendar.innerHTML = "";
            const firstDay = new Date(year, month, 1).getDay();
            const lastDate = new Date(year, month + 1, 0).getDate();
            
            for (let i = 0; i < firstDay; i++) {
                calendar.innerHTML += '<div></div>';
            }
            
            for (let day = 1; day <= lastDate; day++) {
                let dateStr = `${year}-${(month + 1).toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;
                let className = reservedDates[dateStr] ? "reserved" : "available";
                let reservationInfo = reservedDates[dateStr] ? `<div class='reservation-list'>${reservedDates[dateStr].name} (${reservedDates[dateStr].people}명)<br>${reservedDates[dateStr].startDate}~${reservedDates[dateStr].endDate}</div>` : "";
                calendar.innerHTML += `<div class="day ${className}" data-date="${dateStr}">${day}${reservationInfo}</div>`;
            }
        }
        
        document.getElementById("reservationForm").addEventListener("submit", async function(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData);
            
            try {
                const response = await fetch(apiUrl, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                });
                const result = await response.json();
                if (result.status === "success") {
                    alert("예약이 접수되었습니다.");
                    fetchReservations(); // 예약 후 달력 업데이트
                }
            } catch (error) {
                console.error("예약 신청 중 오류 발생", error);
            }
        });
        
        fetchReservations(); // 페이지 로드 시 예약 정보 가져오기
    </script>
</body>
</html>
